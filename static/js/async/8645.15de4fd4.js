"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["8645"],{64613:function(e,n,r){r.r(n),r.d(n,{default:()=>d});var i=r(31549),t=r(6603);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",h4:"h4"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"moduleconfig",children:["ModuleConfig",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#moduleconfig",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"ModuleConfig provides module configuration capabilities for the Gez framework, used to define module import/export rules, alias configuration, and external dependencies."}),"\n",(0,i.jsxs)(n.h2,{id:"type-definitions",children:["Type Definitions",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type-definitions",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"pathtype",children:["PathType",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#pathtype",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"enum PathType {\n  npm = 'npm:', \n  root = 'root:'\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Module path type enumeration:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"npm"}),": Represents dependencies in node_modules"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"root"}),": Represents files in the project root directory"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"moduleconfig-1",children:["ModuleConfig",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#moduleconfig-1",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"interface ModuleConfig {\n  exports?: string[]\n  links?: Record<string, string>\n  imports?: Record<string, string>\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Module configuration interface, used to define service exports, imports, and external dependency configurations."}),"\n",(0,i.jsxs)(n.h4,{id:"exports",children:["exports",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#exports",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Export configuration list, exposing specific code units (such as components, utility functions, etc.) from the service in ESM format."}),"\n",(0,i.jsx)(n.p,{children:"Supports two types:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"root:*"}),": Exports source code files, e.g., ",(0,i.jsx)(n.code,{children:"root:src/components/button.vue"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"npm:*"}),": Exports third-party dependencies, e.g., ",(0,i.jsx)(n.code,{children:"npm:vue"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each export item contains the following properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": Original export path, e.g., ",(0,i.jsx)(n.code,{children:"npm:vue"})," or ",(0,i.jsx)(n.code,{children:"root:src/components"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Path type (",(0,i.jsx)(n.code,{children:"npm"})," or ",(0,i.jsx)(n.code,{children:"root"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"importName"}),": Import name, format: ",(0,i.jsx)(n.code,{children:"${serviceName}/${type}/${path}"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exportName"}),": Export path, relative to the service root directory"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exportPath"}),": Actual file path"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"externalName"}),": External dependency name, used as an identifier when other services import this module"]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"links",children:["links",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#links",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Service dependency configuration mapping, used to configure other services (local or remote) that the current service depends on and their local paths. Each configuration item's key is the service name, and the value is the local path of that service."}),"\n",(0,i.jsx)(n.p,{children:"Different installation methods require different configurations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Source code installation (Workspace, Git): Needs to point to the dist directory, as it requires using built files"}),"\n",(0,i.jsx)(n.li,{children:"Package installation (Link, static server, private mirror source, File): Directly points to the package directory, as the package already contains built files"}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"imports",children:["imports",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#imports",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"External dependency mapping, configuring external dependencies to be used, typically using dependencies from remote modules."}),"\n",(0,i.jsx)(n.p,{children:"Each dependency item contains the following properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"match"}),": Regular expression used to match import statements"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"import"}),": Actual module path"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n  modules: {\n    // Export configuration\n    exports: [\n      'root:src/components/button.vue',  // Export source code file\n      'root:src/utils/format.ts',\n      'npm:vue',  // Export third-party dependency\n      'npm:vue-router'\n    ],\n\n    // Import configuration\n    links: {\n      // Source code installation: Needs to point to the dist directory\n      'ssr-remote': 'root:./node_modules/ssr-remote/dist',\n      // Package installation: Directly points to the package directory\n      'other-remote': 'root:./node_modules/other-remote'\n    },\n\n    // External dependency configuration\n    imports: {\n      'vue': 'ssr-remote/npm/vue',\n      'vue-router': 'ssr-remote/npm/vue-router'\n    }\n  }\n} satisfies GezOptions;\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"parsedmoduleconfig",children:["ParsedModuleConfig",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parsedmoduleconfig",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"interface ParsedModuleConfig {\n  name: string\n  root: string\n  exports: {\n    name: string\n    type: PathType\n    importName: string\n    exportName: string\n    exportPath: string\n    externalName: string\n  }[]\n  links: Array<{\n    /**\n     * Package name\n     */\n    name: string\n    /**\n     * Package root directory\n     */\n    root: string\n  }>\n  imports: Record<string, { match: RegExp; import?: string }>\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Parsed module configuration, converting the original module configuration into a standardized internal format:"}),"\n",(0,i.jsxs)(n.h4,{id:"name",children:["name",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#name",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Current service name"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Used to identify the module and generate import paths"}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"root",children:["root",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#root",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Current service root directory path"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Used to resolve relative paths and store build artifacts"}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"exports-1",children:["exports",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#exports-1",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Export configuration list"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": Original export path, e.g., 'npm:vue' or 'root:src/components'"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Path type (npm or root)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"importName"}),": Import name, format: '${serviceName}/${type}/${path}'"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exportName"}),": Export path, relative to the service root directory"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exportPath"}),": Actual file path"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"externalName"}),": External dependency name, used as an identifier when other services import this module"]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"links-1",children:["links",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#links-1",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Import configuration list"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": Package name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"root"}),": Package root directory"]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"imports-1",children:["imports",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#imports-1",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"External dependency mapping"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Maps module import paths to actual module locations"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"match"}),": Regular expression used to match import statements"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"import"}),": Actual module path"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n"})})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}let d=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["en%2Fapi%2Fcore%2Fmodule-config.md"]={toc:[{text:"Type Definitions",id:"type-definitions",depth:2},{text:"PathType",id:"pathtype",depth:3},{text:"ModuleConfig",id:"moduleconfig-1",depth:3},{text:"exports",id:"exports",depth:4},{text:"links",id:"links",depth:4},{text:"imports",id:"imports",depth:4},{text:"ParsedModuleConfig",id:"parsedmoduleconfig",depth:3},{text:"name",id:"name",depth:4},{text:"root",id:"root",depth:4},{text:"exports",id:"exports-1",depth:4},{text:"links",id:"links-1",depth:4},{text:"imports",id:"imports-1",depth:4}],title:"ModuleConfig",headingTitle:"ModuleConfig",frontmatter:{titleSuffix:"Gez Framework Module Configuration API Reference",description:"Detailed documentation on the ModuleConfig interface of the Gez framework, including module import/export rules, alias configuration, and external dependency management, helping developers gain a deeper understanding of the framework's modular system.",head:[["meta",{property:"keywords",content:"Gez, ModuleConfig, Module Configuration, Module Import/Export, External Dependencies, Alias Configuration, Dependency Management, Web Application Framework"}]]}}}}]);